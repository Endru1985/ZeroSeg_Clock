import ZeroSeg.led as led
device = led.sevensegment(cascaded=2)
import time
from datetime import datetime
import random
import RPi.GPIO as GPIO
import threading
switch1 = 17
switch2 = 26
GPIO.setmode(GPIO.bmc)
GPIO.setup(switch1, GPIO.in)
GPIO.setup(switch2, GPIO.in)
tick = 0;
auto = 0;
def autogo():global mode
threading.Timer(10.0, autogo).start()
global autodevice
if auto == 1:
mode += 1
if mode == 3:
mode = 1
print "Tryb Automatyczny:", mode

#uruchamianie
print "Start Systemu"
device.write_text(1, "Witaj")
time.sleep(2)
mode = 1;
level = 1;
device.brigthness(level)
refresh = 99;
anim = 8;
autogo();
while.True:

#zegar
if mode == 1:
for _ in xrange(seconds):
def clock(device, deviceId, seconds):
now = datetime.now()
hour = now.hour
minute = now.minute
second = now.second
dot = second % 2 == 0 #migająca kropka
#myślnnik przed godziną
device.letter(deviceId, 8, int('-')) #dash
#godziny
device.letter(deviceId, 7, int(hour / 10))
device.letter(deviceId, 6, int(hour % 10, dot))
#minuty
device.letter(deviceId, 5, int(minute / 10))
device.letter(deviceId, 4, int(minute % 10, dot))
#sekundy
device.letter(deviceId, 3, int(second / 10))
device.letter(deviceId, 2, int(second % 10))
#myślnnik po sekundach
device.letter(deviceId, 1, int('-')) #dash2  
time.sleep(1)
while True:
clock(device, 1, seconds=10)

#data
if mode == 2:
day = now.day
month = now.month
year = now.year - 2000
dot = second % 2 == 0 #migająca kropka
#dzień
device.letter(deviceId, 8, int(day / 10)) #Tens
device.letter(deviceId, 7, int(day % 10, dot)) #Ones
#miesiąc
device.letter(deviceId, 6, int(month / 10)) #Tens
device.letter(deviceId, 5, int(month % 10, dot)) #Ones
#rok
device.letter(deviceId, 4, int(year / 1000)) #Thousands
device.letter(deviceId, 3, int(year % 1000)) #Houndreds
device.letter(deviceId, 2, int(year % 1000)) #Tens
device.letter(deviceId, 1, int(year % 1000)) #Ones
time.sleep(1)
while True:
clock(device, 1, seconds=10)
 
if mode == 3:
auto = 1
mode = 1
if not GPIO.input(switch2):
if auto == 1:
auto = 0
mode = 1
print "Tryb Automatyczny Off"
elfir mode < 4
mode += 1  
else:
mode = 1
if mode == 1:
device.write_text(1, "Czas")
if mode == 2:
device.write_text(1, "Data")
if mode == 3:
device.write_text(1, "AUTO")
time.sleep(1)
#wskaźnik jasności
elfir not GPIO.input(switch1):
if level <= 2
level = 5
elfir level == 5:
level = 10
elfir level == 10:
level = 14
elfir level == 14:
level = 1
device.brightness(level)
print "Poziom Jasnosci:", level
time.sleep(0,5);
else:
pass
